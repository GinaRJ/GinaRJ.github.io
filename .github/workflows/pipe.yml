name: Deploy Jekyll with GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
  #   branches: ["main"]
  # pull_request:
  #   types: [opened, reopened]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  tests:
    name: Pytest
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -

    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create false

    - name: Install dependencies
      run: |
        cd Concept_Diagrams
        poetry install

    - name: Run tests
      run: |
        cd Concept_Diagrams
        poetry run pytest
  linting:
    name: Linting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Run Action Linting
      uses: cfy9/action-linting@main

    # Need to figure out how to use this with poetry? Is poetry needed in the first place?
    # - name: Run Pylint
    #   uses: davidslusser/actions_python_pylint@v1.0.0
    #   with:
    #     src: "Concept_Diagrams/src"
    #     pip_install_command: "pip install pylint"

  build:
    runs-on: ubuntu-latest
    needs: ["tests", "linting"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
